{"version":3,"file":"static/js/589.de8f2952.chunk.js","mappings":"4PAEaA,EAAOC,EAAAA,EAAAA,GAAH,sMAWJC,EAAOD,EAAAA,EAAAA,GAAH,uMAUJE,EAAOF,EAAAA,EAAAA,EAAH,4D,SCkBjB,MArCA,YAA+B,IAAXG,EAAU,EAAVA,OAEZC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,SAACN,EAAD,iBACGI,QADH,IACGA,OADH,EACGA,EAAQG,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACtC,OACE,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WAEE,gBACEU,IAZA,kCAYeL,EACfM,IAAKP,GAASE,EACdM,MAAM,MACNC,OAAO,SAET,SAACf,EAAD,UAAOM,GAASE,QATTH,EAad,OAIR,ECDD,MA1BA,WACE,OAAsCW,EAAAA,EAAAA,MAAtC,eAAKC,EAAL,KAAmBC,EAAnB,KACMC,GAAYC,EAAAA,EAAAA,UAclB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,SAC3BD,IACFH,EAAUK,QAAQC,MAAQH,EAE7B,GAAE,CAACL,KAQF,0BACE,kBAAMS,OAAO,GAAGC,SAPC,SAAAC,GACnBA,EAAEC,iBACFX,EAAgB,CAAEI,MAAOM,EAAEE,OAAOC,OAAON,OAC1C,EAIG,WACE,kBAAOO,IAAKb,EAAWc,KAAK,OAAOzB,KAAK,YACxC,mBAAQyB,KAAK,SAAb,wBAIP,ECDD,EApBe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOjC,EAAP,KAAekC,EAAf,KACA,GAAqBnB,EAAAA,EAAAA,MAAhBC,GAAL,eASA,OAPAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,SAC3BD,GACFc,EAAAA,GAAcd,GAAOe,MAAK,SAAAC,GAAC,OAAIH,EAAUG,EAAd,GAE9B,GAAE,CAACrB,KAGF,iCACE,SAAC,EAAD,IACChB,IAAU,SAAC,EAAD,CAAUA,OAAQA,IACT,KAAb,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQsC,UAAgB,8CAG9B,C,8LCtBDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGAETF,EAAAA,EAAAA,IAAA,sCAAyCC,IAFhC,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,QAAQzC,KAAI,YAC/B,MAAO,CACLC,GAFmE,EAAnCA,GAGhCC,MAHmE,EAA/BA,MAIpCC,YAJmE,EAAxBA,YAK3CC,KALmE,EAAXA,KAO3D,KAV+B,2CAAH,qDAalBsC,EAAgB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAqCN,IAD9B,cACxBE,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKhBI,EAAO,mCAAG,WAAMvB,GAAN,uFACEe,EAAAA,EAAAA,IAAA,iBACXf,EADW,4BACcgB,EADd,oBADF,cACfE,EADe,yBAIdA,EAASC,KAAKK,KAAK7C,KAAI,YAC5B,MAAO,CACLI,KAFqE,EAAxCA,KAG7B0C,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9C9C,GALqE,EAATA,GAO/D,KAXoB,2CAAH,sDAcP+C,EAAU,mCAAG,WAAM3B,GAAN,uFACDe,EAAAA,EAAAA,IAAA,iBACXf,EADW,4BACcgB,EADd,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,QAAQzC,KAAI,YAC/B,MAAO,CACLiD,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCjD,GAJ0D,EAATA,GAMpD,KAVuB,2CAAH,sDAaVkD,EAAS,mCAAG,WAAM9B,GAAN,uFACAe,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBhB,EADrB,YADA,cACjBkB,EADiB,yBAIhBA,EAASC,KAAKC,QAAQzC,KAAI,YAC/B,MAAO,CACLC,GAFmE,EAAnCA,GAGhCC,MAHmE,EAA/BA,MAIpCC,YAJmE,EAAxBA,YAK3CC,KALmE,EAAXA,KAO3D,KAXsB,2CAAH,qD","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","servise/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  gap: 10;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin: 20px;\n  width: 300px;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  background-color: #ffffff;\n  transition: 0.25s;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  color: blue;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, Text } from './FilmList.styled';\n\nfunction FilmList({ movies }) {\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies?.map(({ id, title, poster_path, name }) => {\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {/* {title} */}\n                <img\n                  src={IMG_URL + poster_path}\n                  alt={title || name}\n                  width=\"300\"\n                  height=\"450\"\n                />\n                <Text>{title || name}</Text>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default FilmList;","import { useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction SearchForm() {\n  let [searchParams, setSearchParams] = useSearchParams();\n  const inputForm = useRef();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      inputForm.current.value = query;\n    }\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.search.value });\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input ref={inputForm} type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchForm;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../servise/api';\nimport FilmList from 'components/FilmList/FilmList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  let [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      API.getMovies(query).then(r => setMovies(r));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchForm />\n      {movies && <FilmList movies={movies} />}\n      {movies?.length === 0 && <p>Nothing is found</p>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8d04aa17424a03dfb8bf9da86b904800';\n\nexport const fetchTrendingFilms = async () => {\n\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title, poster_path, name }) => {\n    return {\n      id,\n      title,\n      poster_path,\n      name,\n    };\n  });\n}\n\nexport const fetchDetailFilms = async velue => { \n  const response = await axios.get(`/movie/${velue}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport const getCast = async value => {\n  const response = await axios.get(\n    `/movie/${value}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async value => {\n  const response = await axios.get(\n    `/movie/${value}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovies = async value => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${value}&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path, name }) => {\n    return {\n      id,\n      title,\n      poster_path,\n      name,\n    };\n  });\n};"],"names":["List","styled","Item","Text","movies","location","useLocation","map","id","title","poster_path","name","to","state","from","src","alt","width","height","useSearchParams","searchParams","setSearchParams","inputForm","useRef","useEffect","query","get","current","value","action","onSubmit","e","preventDefault","target","search","ref","type","useState","setMovies","API","then","r","length","axios","API_KEY","fetchTrendingFilms","response","data","results","fetchDetailFilms","velue","getCast","cast","character","profile_path","getReviews","author","content","getMovies"],"sourceRoot":""}